{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert\\\\Desktop\\\\shenenigans\\\\pinmap\\\\pinmap\\\\client\\\\src\\\\LocationEntry.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LocationEntry({\n  pin,\n  setPins\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(pin.name);\n  const handleEdit = async () => {\n    if (isEditing) {\n      try {\n        const res = await fetch(`${process.env.REACT_APP_SERVER_API_URL}/pin/${pin._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: newName\n          })\n        });\n        if (res.ok) {\n          refreshPins();\n        } else {\n          console.error('Failed to update pin');\n        }\n      } catch (err) {\n        console.error('Error updating pin:', err);\n      }\n    }\n    setIsEditing(!isEditing);\n  };\n  const handleDelete = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_SERVER_API_URL}/pin/${pin._id}`, {\n        method: 'DELETE'\n      });\n      if (res.ok) {\n        refreshPins();\n      } else {\n        console.error('Failed to delete pin');\n      }\n    } catch (err) {\n      console.error('Error deleting pin:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-entry\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newName,\n      onChange: e => setNewName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: pin.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Coordinates: \", pin.loc.coordinates[1], \", \", pin.loc.coordinates[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Creation date: \", pin.creationTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      children: isEditing ? 'Zapisz' : 'Edytuj'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Usu\\u0144\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(LocationEntry, \"XTmZOJz60nwXJ2+/M5CrdixPgMA=\");\n_c = LocationEntry;\nexport default LocationEntry;\nvar _c;\n$RefreshReg$(_c, \"LocationEntry\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LocationEntry","pin","setPins","_s","isEditing","setIsEditing","newName","setNewName","name","handleEdit","res","fetch","process","env","REACT_APP_SERVER_API_URL","_id","method","headers","body","JSON","stringify","ok","refreshPins","console","error","err","handleDelete","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","loc","coordinates","creationTime","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Robert/Desktop/shenenigans/pinmap/pinmap/client/src/LocationEntry.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction LocationEntry({ pin, setPins }) {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [newName, setNewName] = useState(pin.name);\r\n\r\n    const handleEdit = async () => {\r\n        if (isEditing) {\r\n            try {\r\n                const res = await fetch(`${process.env.REACT_APP_SERVER_API_URL}/pin/${pin._id}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ name: newName }),\r\n                });\r\n\r\n                if (res.ok) {\r\n                    refreshPins();\r\n                } else {\r\n                    console.error('Failed to update pin');\r\n                }\r\n            } catch (err) {\r\n                console.error('Error updating pin:', err);\r\n            }\r\n        }\r\n        setIsEditing(!isEditing);\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            const res = await fetch(`${process.env.REACT_APP_SERVER_API_URL}/pin/${pin._id}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (res.ok) {\r\n                refreshPins();\r\n            } else {\r\n                console.error('Failed to delete pin');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error deleting pin:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"location-entry\">\r\n            {isEditing ? (\r\n                <input\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={(e) => setNewName(e.target.value)}\r\n                />\r\n            ) : (\r\n                <h2>{pin.name}</h2>\r\n            )}\r\n            <p>Coordinates: {pin.loc.coordinates[1]}, {pin.loc.coordinates[0]}</p>\r\n            <p>Creation date: {pin.creationTime}</p>\r\n            <button onClick={handleEdit}>\r\n                {isEditing ? 'Zapisz' : 'Edytuj'}\r\n            </button>\r\n            <button onClick={handleDelete}>Usu≈Ñ</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LocationEntry;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}