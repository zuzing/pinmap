{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert\\\\Desktop\\\\shenenigans\\\\pinmap\\\\pinmap\\\\client\\\\src\\\\LocationEntry.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport LocationEntry from './LocationEntry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LocationList({\n  pins,\n  refreshPins\n}) {\n  _s();\n  const PAGE_SIZE = 5;\n  const [page, setPage] = useState(1);\n  const maxPage = Math.ceil(pins.length / PAGE_SIZE);\n  const paginatedPins = pins.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);\n  useEffect(() => {\n    if (page > maxPage) {\n      setPage(maxPage || 1);\n    }\n  }, [pins]);\n  const handleNext = () => {\n    setPage(prev => Math.min(prev + 1, maxPage));\n  };\n  const handlePrev = () => {\n    setPage(prev => Math.max(prev - 1, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-list\",\n    children: [paginatedPins.map(pin => /*#__PURE__*/_jsxDEV(LocationEntry, {\n      pin: pin,\n      refreshPins: refreshPins\n    }, pin._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        disabled: page === 1,\n        children: \"Poprzednia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [page, \" / \", maxPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: page === maxPage,\n        children: \"Nast\\u0119pna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(LocationList, \"LMxNfAY58b6loOOsHmH6zd80VGE=\");\n_c = LocationList;\nexport default LocationList;\nvar _c;\n$RefreshReg$(_c, \"LocationList\");","map":{"version":3,"names":["useState","useEffect","LocationEntry","jsxDEV","_jsxDEV","LocationList","pins","refreshPins","_s","PAGE_SIZE","page","setPage","maxPage","Math","ceil","length","paginatedPins","slice","handleNext","prev","min","handlePrev","max","className","children","map","pin","_id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Robert/Desktop/shenenigans/pinmap/pinmap/client/src/LocationEntry.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport LocationEntry from './LocationEntry';\r\n\r\nfunction LocationList({ pins, refreshPins }) {\r\n    const PAGE_SIZE = 5;\r\n    const [page, setPage] = useState(1);\r\n\r\n    const maxPage = Math.ceil(pins.length / PAGE_SIZE);\r\n    const paginatedPins = pins.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);\r\n\r\n    useEffect(() => {\r\n        if (page > maxPage) {\r\n            setPage(maxPage || 1);\r\n        }\r\n    }, [pins]);\r\n\r\n    const handleNext = () => {\r\n        setPage((prev) => Math.min(prev + 1, maxPage));\r\n    };\r\n\r\n    const handlePrev = () => {\r\n        setPage((prev) => Math.max(prev - 1, 1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"location-list\">\r\n            {paginatedPins.map((pin) => (\r\n                <LocationEntry key={pin._id} pin={pin} refreshPins={refreshPins} />\r\n            ))}\r\n\r\n            <div className=\"pagination-controls\">\r\n                <button onClick={handlePrev} disabled={page === 1}>\r\n                    Poprzednia\r\n                </button>\r\n                <span>{page} / {maxPage}</span>\r\n                <button onClick={handleNext} disabled={page === maxPage}>\r\n                    NastÄ™pna\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LocationList;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAMY,OAAO,GAAGC,IAAI,CAACC,IAAI,CAACR,IAAI,CAACS,MAAM,GAAGN,SAAS,CAAC;EAClD,MAAMO,aAAa,GAAGV,IAAI,CAACW,KAAK,CAAC,CAACP,IAAI,GAAG,CAAC,IAAID,SAAS,EAAEC,IAAI,GAAGD,SAAS,CAAC;EAE1ER,SAAS,CAAC,MAAM;IACZ,IAAIS,IAAI,GAAGE,OAAO,EAAE;MAChBD,OAAO,CAACC,OAAO,IAAI,CAAC,CAAC;IACzB;EACJ,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACrBP,OAAO,CAAEQ,IAAI,IAAKN,IAAI,CAACO,GAAG,CAACD,IAAI,GAAG,CAAC,EAAEP,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBV,OAAO,CAAEQ,IAAI,IAAKN,IAAI,CAACS,GAAG,CAACH,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,oBACIf,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,GACzBR,aAAa,CAACS,GAAG,CAAEC,GAAG,iBACnBtB,OAAA,CAACF,aAAa;MAAewB,GAAG,EAAEA,GAAI;MAACnB,WAAW,EAAEA;IAAY,GAA5CmB,GAAG,CAACC,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuC,CACrE,CAAC,eAEF3B,OAAA;MAAKmB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChCpB,OAAA;QAAQ4B,OAAO,EAAEX,UAAW;QAACY,QAAQ,EAAEvB,IAAI,KAAK,CAAE;QAAAc,QAAA,EAAC;MAEnD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT3B,OAAA;QAAAoB,QAAA,GAAOd,IAAI,EAAC,KAAG,EAACE,OAAO;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B3B,OAAA;QAAQ4B,OAAO,EAAEd,UAAW;QAACe,QAAQ,EAAEvB,IAAI,KAAKE,OAAQ;QAAAY,QAAA,EAAC;MAEzD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CAtCQH,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}